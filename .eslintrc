{
  "parserOptions": {
    "parser": "@typescript-eslint/parser",
    "project": "tsconfig.json"
  },
  "extends": [
    "airbnb",
    "prettier",
    "@react-native",
    // Отключаем правила из базового набора
    "plugin:@typescript-eslint/eslint-recommended",
    // Базовые правила для TypeScript
    "plugin:@typescript-eslint/recommended",
    // Правила TS, требующие инфо о типах
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "env": {
    "es6": true,
    "browser": true,
    "jest": true
  },
  "plugins": [
    "prettier",
    "react",
    "react-hooks",
    "import",
    "jsx-a11y",
    "@typescript-eslint",
    "eslint-plugin-unused-imports"
  ],
  "settings": {
    "import/resolver": {
      "node": {
        "paths": ["src"],
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "rules": {
    // Временное решение для файлов typescript
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-return": "warn",
    "@typescript-eslint/no-unsafe-member-access": "warn",
    "@typescript-eslint/no-unsafe-assignment": "warn",
    "@typescript-eslint/no-unsafe-argument": "warn",

    // Основные правила
    "no-new": "off",
    "comma-dangle": "off",
    "func-names": "off",
    "no-plusplus": "off",
    "prefer-const": "error",
    "react/no-danger": "error",
    "class-methods-use-this": "off",
    "no-param-reassign": ["error", { "props": false }],
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": "*", "next": "if" },
      { "blankLine": "always", "prev": "*", "next": "export" },
      { "blankLine": "always", "prev": "*", "next": "try" }
    ],
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": {
          "attributes": false
        }
      }
    ],
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/restrict-plus-operands": "off",
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/unbound-method": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-unnecessary-type-assertion": "off",
    "@typescript-eslint/class-name-casing": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/no-unsafe-enum-comparison": "off",
    "@typescript-eslint/explicit-member-accessibility": [
      "warn",
      {
        "accessibility": "explicit",

        "overrides": {
          "accessors": "off",
          "constructors": "no-public",
          "methods": "explicit",
          "properties": "explicit",
          "parameterProperties": "explicit"
        }
      }
    ],
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    "react/button-has-type": "off",
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/jsx-filename-extension": [2, { "extensions": [".js", ".jsx", ".ts", ".tsx"] }],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "off",
    "react/prop-types": 0,
    "react/require-default-props": "off",
    "react/jsx-curly-brace-presence": "off",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-no-target-blank": "off",
    "react/jsx-no-useless-fragment": ["error", { "allowExpressions": true }],
    "react/no-unused-prop-types": ["error", { "ignore": ["children"] }],
    "react/no-unstable-nested-components": ["warn", { "allowAsProps": true }],
    "import/no-extraneous-dependencies": ["warn", { "devDependencies": true }],
    "import/prefer-default-export": 0,
    "import/first": "off",
    "import/extensions": "off",
    "import/no-cycle": 0,
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal"],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          },
          {
            "group": "sibling",
            "position": "after",
            "pattern": "react"
          }
        ],
        "pathGroupsExcludedImportTypes": ["react"],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/no-static-element-interactions": "off",
    "jsx-a11y/href-no-hash": "off",
    "jsx-a11y/alt-text": "warn",
    "jsx-a11y/control-has-associated-label": "off",
    "jsx-a11y/media-has-caption": "off",
    "jsx-a11y/no-noninteractive-element-interactions": "off",
    "jsx-a11y/no-noninteractive-tabindex": "off",
    "no-unused-expressions": ["error", { "allowTernary": true }],
    // Фиксы из официальной документации
    "jsx-a11y/label-has-associated-control": ["off"],
    "jsx-a11y/label-has-for": ["off"],
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": ["error"],
    "no-shadow": "off",
    "no-use-before-define": "off",
    "no-unused-vars": "error",
    "no-underscore-dangle": [
      "error",
      {
        "allowAfterThis": true
      }
    ],
    "import/no-unresolved": [
      "error",
      {
        "ignore": ["\\.svg\\?svgr$"]
      }
    ],
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/no-use-before-define": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "prefix": ["I"],
        "selector": "interface",
        "format": ["PascalCase"],
        "filter": {
          "regex": "^(Window)$",
          "match": false
        }
      },
      {
        "prefix": ["E"],
        "selector": "enum",
        "format": ["PascalCase"]
      },
      {
        "prefix": ["T"],
        "selector": "typeAlias",
        "format": ["PascalCase"]
      },
      {
        "selector": "variable",
        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
      },
      {
        "selector": "enumMember",
        "format": ["PascalCase"]
      }
    ],
    "lines-between-class-members": "off",
    "no-bitwise": "off",
    "unused-imports/no-unused-imports": "error",
    "no-restricted-imports": [
      "warn",
      {
        "paths": [
          {
            "name": "mobx-react-lite",
            "importNames": ["observer"],
            "message": "Please use the custom observer from componentsV2"
          }
        ]
      }
    ]
  }
}
